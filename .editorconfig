# EditorConfig is awesome: https://EditorConfig.org

# top-most EditorConfig file
root = true

# Unix-style newlines with a newline ending every file
[*]
end_of_line = lf
insert_final_newline = true
charset = utf-8
trim_trailing_whitespace = true

# C# files
[*.cs]
indent_style = space
indent_size = 4

# XML files
[*.xml]
indent_style = space
indent_size = 2

# C# files
[*.cs]
csharp_style_var_for_built_in_types = true
csharp_style_var_when_type_is_apparent = true
csharp_style_var_elsewhere = false

csharp_style_expression_bodied_methods = true
csharp_style_expression_bodied_constructors = false
csharp_style_expression_bodied_operators = false
csharp_style_expression_bodied_properties = true
csharp_style_expression_bodied_indexers = true
csharp_style_expression_bodied_accessors = true
csharp_style_expression_bodied_lambdas = true
csharp_style_expression_bodied_local_functions = true

dotnet_style_predefined_type_for_locals_parameters_members = true
dotnet_style_predefined_type_for_member_access = true

dotnet_style_qualification_for_field = false
dotnet_style_qualification_for_property = false
dotnet_style_qualification_for_method = false
dotnet_style_qualification_for_event = false

csharp_prefer_braces = true

csharp_style_prefer_conditional_delegate_call = true

# Naming conventions
dotnet_naming_rule.public_members_must_be_pascal_case.severity = suggestion
dotnet_naming_rule.public_members_must_be_pascal_case.symbols = public_members
dotnet_naming_rule.public_members_must_be_pascal_case.style = pascal_case_style

dotnet_naming_symbols.public_members.applicable_kinds = property, method, field, event, delegate
dotnet_naming_symbols.public_members.accessibility = public

dotnet_naming_style.pascal_case_style.capitalization = pascal_case

# usings
csharp_using_directive_placement = outside_namespace

# Code style
dotnet_sort_system_directives_first = true

# Blank lines
csharp_blank_line_before_open_brace = accessors, methods, properties
csharp_blank_line_before_else = true
csharp_blank_line_before_catch = true
csharp_blank_line_before_finally = true
csharp_blank_line_between_consecutive_braces = true
csharp_blank_line_between_import_groups = true

# New line preferences
csharp_new_line_before_open_brace = all
csharp_new_line_before_else = true
csharp_new_line_before_catch = true
csharp_new_line_before_finally = true
csharp_new_line_before_members_in_object_initializers = true
csharp_new_line_before_members_in_anonymous_types = true
csharp_new_line_between_query_expression_clauses = true

# Indentation preferences
csharp_indent_case_contents = true
csharp_indent_switch_labels = true
csharp_indent_labels = one_less_than_current
csharp_indent_block_contents = true
csharp_indent_braces = false

# Spacing preferences
csharp_space_after_cast = false
csharp_space_after_keywords_in_control_flow_statements = true
csharp_space_between_parentheses = false
csharp_space_before_colon_in_inheritance_clause = true
csharp_space_after_colon_in_inheritance_clause = true
csharp_space_around_binary_operators = before_and_after
csharp_space_between_method_declaration_parameter_list_parentheses = false
csharp_space_between_method_call_parameter_list_parentheses = false
csharp_space_between_parentheses_and_argument_list = true
csharp_space_between_parentheses_in_for_statement = true
csharp_space_between_parentheses_in_if_statement = true
csharp_space_between_parentheses_in_while_statement = true
csharp_space_between_parentheses_in_switch_statement = true
csharp_space_between_parentheses_in_catch_statement = true
csharp_space_between_parentheses_in_lock_statement = true
csharp_space_between_parentheses_in_using_statement = true
csharp_space_between_parentheses_in_method_declaration = false
csharp_space_between_parentheses_in_method_call = false
csharp_space_between_parentheses_in_control_flow_statements = true
csharp_space_between_parentheses_in_type_casts = false

# Wrapping preferences
csharp_preserve_single_line_blocks = true
csharp_preserve_single_line_statements = false

# Modifier preferences
csharp_preferred_modifier_order = public,private,protected,internal,static,extern,new,virtual,abstract,sealed,override,readonly,unsafe,volatile,async

# Expression-level preferences
dotnet_style_object_initializer = true
dotnet_style_collection_initializer = true
dotnet_style_explicit_tuple_names = true
dotnet_style_coalesce_expression = true
dotnet_style_null_propagation = true
dotnet_style_prefer_is_null_check_over_reference_equality_method = true
dotnet_style_prefer_simplified_boolean_expressions = true

# Field preferences
dotnet_style_readonly_field = true

# Parameter preferences
dotnet_style_prefer_inferred_anonymous_type_member_names = true
dotnet_style_prefer_inferred_tuple_element_names = true

# `using` preferences
csharp_prefer_simple_using_statement = true

# `is` and `as` preferences
csharp_style_pattern_local_over_anonymous_function = true
csharp_style_prefer_pattern_matching_over_as_with_null_check = true
csharp_style_prefer_pattern_matching_over_is_with_cast_check = true
csharp_style_prefer_switch_expression = true

# Null-checking preferences
csharp_style_throw_expression = true
csharp_style_conditional_delegate_call = true

# Code block preferences
csharp_prefer_braces = true

# Modifiers
dotnet_style_require_accessibility_modifiers = for_non_interface_members
csharp_preferred_modifier_order = public, protected, internal, private, static, readonly, const, new, virtual, abstract, sealed, override, extern, unsafe, volatile, async

# Unnecessary code
dotnet_code_quality_unused_parameters = all
dotnet_code_quality_unnecessary_assignment = all

# Style
csharp_style_inlined_variable_declaration = true
csharp_style_deconstruction_variable_declaration = true